<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2022 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<project basedir="." default="help" name="wsit-jaxws-fromwsdl">

    <property environment="env"/>
    <property file="etc/build.properties"/>
    <property name="build.home" value="${basedir}/build"/>
    <property name="build.classes.home" value="${build.home}/classes"/>
    <property name="build.war.home" value="${build.home}/war"/>
    <property name="war.file" value="${build.war.home}/${ant.project.name}.war"/>
    <property name="domain" value="domain1"/>

    <!--property name="as.home" value="" /-->
    <!--property name="catalina.home" value="" /-->

    <condition property="as.home" value="${env.AS_HOME}">
        <isset property="env.AS_HOME"/>
    </condition>

    <condition property="catalina.home" value="${env.CATALINA_HOME}">
        <isset property="env.CATALINA_HOME"/>
    </condition>

    <!--
	There are 2 ways to designate a tomcat build.
    -->
    <condition property="bld.for.tomcat" value="true">
        <or>
            <and>
                <not>
                    <isset property="as.home"/>
                </not>
                <isset property="catalina.home"/>
            </and>
            <and>
                <isset property="as.home"/>
                <isset property="catalina.home"/>
                <isset property="use.tomcat"/>
            </and>
        </or>
    </condition>

    <!--
        Verify that one of the two supported containers is identified
        for use.  If these are not set correctly lib.home and deploy.dir
        will not be correct and all elements that use them will not be correct.
    -->
    <fail message="Web container not identified. Require AS_HOME or CATALINA_HOME be set">
        <condition>
            <and>
                <not>
                    <isset property="as.home"/>
                </not>
                <not>
                    <isset property="catalina.home"/>
                </not>
            </and>
        </condition>
    </fail>
    <fail message="Two Web containers identified. Only one allowed AS_HOME or CATALINA_HOME">
        <condition>
            <and>
                <isset property="as.home"/>
                <isset property="catalina.home"/>
                <not>
                    <isset property="use.tomcat"/>
                </not>
            </and>
        </condition>
    </fail>

    <condition property="lib.home" value="${catalina.home}/shared/lib" else="${as.home}/lib">
        <isset property="bld.for.tomcat"/>
    </condition>

    <condition property="deploy.dir" value="${catalina.home}/webapps" else="${as.home}/domains/${domain}/autodeploy">
        <isset property="bld.for.tomcat"/>
    </condition>

    <condition property="modules.home" value="" else="${as.home}/modules">
        <isset property="bld.for.tomcat"/>
    </condition>

    <path id="wsit.classpath">
        <!-- GF Classpath -->
        <fileset dir="${modules.home}">
            <include name="angus-activation.jar"/>
            <include name="gmbal.jar"/>
            <include name="ha-api.jar"/>
            <include name="jakarta.activation-api.jar"/>
            <include name="jakarta.xml.bind-api.jar"/>
            <include name="jaxb-osgi.jar"/>
            <include name="webservices-api-osgi.jar"/>
            <include name="webservices-extra-jdk-packages.jar"/>
            <include name="webservices-extra-xmlsec.jar"/>
            <include name="webservices-osgi.jar"/>
            <include name="xmlsec.jar"/>
        </fileset>
        <fileset dir="${lib.home}">
            <!-- GF API -->
            <include name="jakartaee.jar"/>
            <!-- Tomcat Classpath -->
            <include name="jakarta.annotation-api.jar"/>
            <include name="webservices-api.jar"/>
            <include name="webservices-extra.jar"/>
            <include name="webservices-rt.jar"/>
            <include name="webservices-extra-xmlsec.jar"/>
            <include name="webservices-tools.jar"/>
            <include name="xmlsec.jar"/>
        </fileset>
    </path>

    <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
        <classpath refid="wsit.classpath"/>
    </taskdef>

    <target name="setup">
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.classes.home}"/>
        <mkdir dir="${build.war.home}"/>
    </target>

    <target name="clean">
        <delete dir="${build.home}" includeEmptyDirs="true"/>
    </target>

    <target name="build-server-wsdl" depends="setup">
        <wsimport
                debug="${debug}"
                verbose="${verbose}"
                keep="${keep}"
                extension="${extension}"
                destdir="${build.classes.home}"
                wsdl="${basedir}/${server.wsdl}">
            <binding dir="${basedir}/etc" includes="${server.binding}"/>
        </wsimport>
        <javac
                fork="true"
                release="${release}"
                srcdir="${basedir}/src"
                destdir="${build.classes.home}"
                includes="**/server/**,**/common/**">
            <classpath refid="wsit.classpath"/>
        </javac>
    </target>

    <target name="create-war">
        <war warfile="${war.file}" webxml="etc/web.xml">
            <webinf dir="${basedir}/etc" includes="sun-jaxws.xml"/>
            <zipfileset
                    dir="${basedir}/etc"
                    includes="*.wsdl, *.xsd"
                    prefix="WEB-INF/wsdl"/>
            <classes dir="${build.classes.home}"/>
        </war>
    </target>

    <target name="generate-client" depends="setup">
        <wsimport
                debug="${debug}"
                verbose="${verbose}"
                keep="${keep}"
                extension="${extension}"
                destdir="${build.classes.home}"
                wsdl="${client.wsdl}">
            <binding dir="${basedir}/etc" includes="${client.binding}"/>
        </wsimport>
    </target>

    <target name="client" depends="generate-client">
        <javac
                fork="true"
                release="${release}"
                debug="${debug}"
                srcdir="${basedir}/src"
                destdir="${build.classes.home}"
                includes="**/client/**,**/common/**">
            <classpath refid="wsit.classpath"/>
        </javac>
    </target>

    <target name="run">
        <java fork="true" classname="${client}">
            <!--
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/>
            -->
            <classpath>
                <path refid="wsit.classpath"/>
                <pathelement location="${build.classes.home}"/>
                <pathelement location="${basedir}/etc"/>
            </classpath>
        </java>
    </target>

    <target name="deploy">
        <copy file="${war.file}" todir="${deploy.dir}"/>
    </target>

    <target name="help">
        <echo message="server:       Builds and deploy the service endpoint WAR"/>
        <echo message="client:       Builds the client"/>
        <echo message="run:          Runs the client"/>
    </target>

    <target name="server" depends="setup">
        <antcall target="clean"/>
        <antcall target="build-server-wsdl"/>
        <antcall target="create-war"/>
        <antcall target="deploy"/>
    </target>
</project>

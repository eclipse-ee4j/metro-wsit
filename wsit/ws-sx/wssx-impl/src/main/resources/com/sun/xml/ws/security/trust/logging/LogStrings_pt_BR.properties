#
# Copyright (c) 2010, 2022 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Distribution License v. 1.0, which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: BSD-3-Clause
#

#### Logging Error codes

WST0001.unsupported.proofToken.type=WST0001:tipo de Token de Prova: {0} direcionado para o servi\u00E7o {1}. Os tipos aceitos s\u00E3o segredo bin\u00E1rio e chave calculados.

WST0002.fail.marshal.tosource=WST0002: houve um erro ao fazer marshalling de {0} para a Origem.

WST0003.error.creating.wstrustfact=WST0003: houve um erro ao criar WSTrustElementFactory.

WST0004.unknown.serviceprovider=WST0004:provedor de servi\u00E7o {0} do alvo desconhecido. A Configura\u00E7\u00E3o de STS n\u00E3o cont\u00E9m metadados de servi\u00E7o.

WST0005.classnotfound.null.contract=WST0005:n\u00E3o foi poss\u00EDvel obter o contrato confi\u00E1vel porque a classe {0} n\u00E3o foi encontrada.

WST0006.fail.rst.source=WST0006:falha ao criar RST da Origem {0}.

WST0007.fail.rst.elem=WST0007:falha ao criar RST do Elemento {0}.

WST0008.fail.rstr.source=WST0008:falha ao criar RSTR da Origem {0}.

WST0009.fail.rstr.elem=WST0009:falha ao criar RSTR do Elemento {0}.

# {0} - "RST"/"RSTRCollection"/"STR" ("Request Security Token", "Security Token Reference")
WST0010.failed.creation.from.jaxbele=WST0010: houve um problema ao criar {0} de JAXBElement.

WST0011.parserconfig.ex.toElement=WST0011:exce\u00E7\u00E3o de configura\u00E7\u00E3o de parser ao criar o elemento.

WST0012.jaxb.ex.toElement=WST0012:JAXBException detectada ao criar o Elemento.

WST0013.error.secret.key=WST0013:erro ao calcular a chave secreta com o algoritmo {0} com o tamanho {1} aplica-se ao servi\u00E7o {2}.

WST0014.uri.syntax=WST0014:URI inv\u00E1lido obtido do contexto de RST.

# {0} - user name, {1} - token type, {2} - URL e.g.: WST0015:The client CN=a,L=b,ST=c,2.5.4.17=#13053238323039 is not authorized to be issued the token of type urn:oasis:names:tc:SAML:2.0:assertion applied to http://localhost:8080/myService.
WST0015.client.not.authorized=WST0015:o cliente {0} n\u00E3o est\u00E1 autorizado a emitir o token do tipo {1} aplicado a {2}

WST0016.problem.itCtx=WST0016:houve um problema ao chamar STS {0} ou tratar a resposta dele ao solicitar o token do servi\u00E7o {1}.

# STS = Security Token Service.
WST0017.service.portname.error=WST0017:n\u00E3o foi poss\u00EDvel obter os metadados de STS. Houve falha na chamada de MEX para STS {0}.

WST0018.tokens.null=WST0018:resposta de Token de Seguran\u00E7a da Solicita\u00E7\u00E3o inv\u00E1lida aplicada ao servi\u00E7o {0}. O RSTR n\u00E3o cont\u00E9m um token emitido nem um token de prova.

WST0019.invalid.proofToken.type=WST0019:Tipo de Token de Prova: {0} Inv\u00E1lido para o servi\u00E7o {1}.

# {0} - text in base64 encoding (e.g. AGVsbG8=)
WST0020.error.decoding=WST0020:erro ao decodificar {0}.

WST0021.error.unmarshal.domElement=WST0021:erro ao cancelar marshalling em JAXBElement de um Elemento dom.

WST0022.invalid.entropy=WST0022:tipo de entropy inv\u00E1lido: {0}. Os tipos permitidos s\u00E3o - Bin\u00E1rio, EncryptedType e Personalizado.

WST0023.invalid.uri.syntax=WST0023:sintaxe: {0} de URI inv\u00E1lida.

WST0024.invalid.request.type=WST0024:tipo de Solicita\u00E7\u00E3o Inv\u00E1lido: {0}. Deve ser um dos seguintes: Emitir, Cancelar, KeyExchange, Renovar ou Validar.

WST0025.invalid.key.type=WST0025:tipo de Chave Inv\u00E1lido: {0} aplica-se ao servi\u00E7o {1}. Deve ser um dos seguintes: Publickey, Symmetric Key ou No Proof Key.

WST0026.invalid.ck.algorithm.E=WST0026:algoritmo {0} de Chave Calculado Inv\u00E1lido.
WST0026.invalid.ck.algorithm=WST0026:Algoritmo de Chave {0} Calculado Inv\u00E1lido. Deve ser HASH ou PSHA1.

WST0028.invalid.ck=WST0028:URI {0} de Chave Calculado Inv\u00E1lido.

WST0029.could.not.get.sts.location=WST0029:a localiza\u00E7\u00E3o de STS n\u00E3o p\u00F4de ser obtida de IssuedToken ou da configura\u00E7\u00E3o do cliente para acessar o servi\u00E7o {0}.

WST0030.requestor.null=WST0030:o Assunto \u00E9 nulo. O cliente n\u00E3o foi autenticado ou o assunto n\u00E3o foi estabelecido durante a autentica\u00E7\u00E3o.

# {0} - token type, {1} URL
WST0031.unsupported.token.type=WST0031:tipo de Token n\u00E3o suportado: {0} aplica-se a {1}. Tipos de token de asser\u00E7\u00E3o SAML 1.0 ou SAML 1.1 esperados.

WST0032.error.creating.SAML.assertion=WST0032:erro ao criar a Asser\u00E7\u00E3o SAML.

WST0033.unable.get.service.cert=WST0033:n\u00E3o \u00E9 poss\u00EDvel obter o certificado do servi\u00E7o {0}.

WST0034.unable.get.client.cert=WST0034:n\u00E3o \u00E9 poss\u00EDvel obter o certificado do cliente. O indiv\u00EDduo n\u00E3o cont\u00E9m credenciais v\u00E1lidas ou houve um problema ao adicionar o certificado X509.

WST0035.unable.create.sign.saml.assertion=WST0035:n\u00E3o \u00E9 poss\u00EDvel criar a Asser\u00E7\u00E3o SAML do sinal.

WST0036.unable.create.keyInfo=WST0036:n\u00E3o \u00E9 poss\u00EDvel criar Informa\u00E7\u00F5es da Chave.

WST0037.error.computing.key=WST0037:erro ao calcular a chave.

WST0038.init.contract.fail=WST0038:n\u00E3o foi poss\u00EDvel estabelecer o contrato confi\u00E1vel.

WST0039.error.creating.docfactory=WST0039:erro ao criar uma factory do documento em decorr\u00EAncia de exce\u00E7\u00E3o de Parser.

WST0040.error.encrypt.proofkey=WST0040:erro ao criptografar a chave de prova do servi\u00E7o {0}.

WST0041.service.not.created=WST0041:n\u00E3o foi poss\u00EDvel criar o servi\u00E7o em decorr\u00EAncia de URL {0} incorreto.

WST0042.no.matching.service.mex=WST0042:nenhum servi\u00E7o correspondente com o ponto final {0} encontrado nos Metadados.

WST0043.unable.get.sts.key=WST0043:n\u00E3o \u00E9 poss\u00EDvel obter a chave do STS.

WST0044.error.encrypt.issued.token=WST0044:erro ao criptografar o token emitido do servi\u00E7o {0}.

WST0045.error.unmarshall.claims=WST0045: erro ao cancelar o marshalling. Reivindica\u00E7\u00F5es do servi\u00E7o {0}.

WST0046.token.expired=WST0046: token expirado: criado em {0}, expira em {1}; data atual {2}

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
WST1001.token.type=WST1001:tipo de token: {0}.

WST1002.provider.type=WST1002:tipo de configura\u00E7\u00E3o do provedor de STS {0}.

WST1003.tokentype.appliesto.null=WST1003:TokenType e AppliesTo n\u00E3o podem ser nulos.

WST1004.error.marshal.toString=WST1004:erro ao fazer marshalling do Elemento {0} para a string para registro.

WST1006.created.rst.issue=WST1006:RST criado para Emiss\u00E3o:\n {0}.

WST1007.created.rstr.issue=WST1007:RSTR criado para Emiss\u00E3o:\n {0}.

WST1008.created.rstr.cancel=WST1008:RSTR criado para Cancelamento:\n {0}.

WST1009.null.binary.secret=WST1009:o Segredo Bin\u00E1rio \u00E9 nulo. ClientEntropy no RST n\u00E3o cont\u00E9m um Segredo Bin\u00E1rio.

WST1010.key.size=WST1010:o valor: {0} de Keysize. O default \u00E9 {1}.

WST1011.problem.metadata=WST1011:problema ao extrair os Metadados do Token Emitido. O URI \u00E9 {0}.

WST1012.service.portname.mex=WST1012:obtendo o servi\u00E7o STS e os nomes da porta por meio de MEX. ServiceName: {0} e PortName: {1}.

WST1013.sts.uri.client=WST1013:obtendo a localiza\u00E7\u00E3o STS da configura\u00E7\u00E3o do cliente. URI de STS: {0}.

WST1014.response.invoking.rst=WST1014:resposta de RSTR ao chamar o RST:\n {0}.

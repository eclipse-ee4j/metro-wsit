#
# Copyright (c) 2010, 2022 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Distribution License v. 1.0, which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: BSD-3-Clause
#

#### Logging Error codes

WST0001.unsupported.proofToken.type=WST0001:Unsupported Proof Token Type: {0} targeted for the service {1}. Accepted types are computed key and binary secret.

WST0002.fail.marshal.tosource=WST0002: There was an error marshalling {0} to Source.

WST0003.error.creating.wstrustfact=WST0003: There was an error creating WSTrustElementFactory.

WST0004.unknown.serviceprovider=WST0004:Unknown target service provider {0}. STS Configuration does not contain meta data for the service.

WST0005.classnotfound.null.contract=WST0005:Trust contract could not be obtained because the class {0} was not found.

WST0006.fail.rst.source=WST0006:Failed to create RST from Source {0}.

WST0007.fail.rst.elem=WST0007:Failed to create RST from Element {0}.

WST0008.fail.rstr.source=WST0008:Failed to create RSTR from Source {0}.

WST0009.fail.rstr.elem=WST0009:Failed to create RSTR from Element {0}.

# {0} - "RST"/"RSTRCollection"/"STR" ("Request Security Token", "Security Token Reference")
WST0010.failed.creation.from.jaxbele=WST0010:There was a problem while creating {0} from JAXBElement.

WST0011.parserconfig.ex.toElement=WST0011:Parser configuration exception while creating element.

WST0012.jaxb.ex.toElement=WST0012:JAXBException encountered while creating Element.

WST0013.error.secret.key=WST0013:Error in computing secret key with algorithm {0} of size {1} apllies to the service {2}.

WST0014.uri.syntax=WST0014:Invalid URI obtained from RST's context.

# {0} - user name, {1} - token type, {2} - URL e.g.: WST0015:The client CN=a,L=b,ST=c,2.5.4.17=#13053238323039 is not authorized to be issued the token of type urn:oasis:names:tc:SAML:2.0:assertion applied to http://localhost:8080/myService.
WST0015.client.not.authorized=WST0015:The client {0} is not authorized to be issued the token of type {1} applied to {2}.

WST0016.problem.itCtx=WST0016:There was a problem in invoking STS {0} or handling response from it when requesting token for the service {1}.

# STS = Security Token Service.
WST0017.service.portname.error=WST0017:Could not obtain STS metadata. MEX call to STS {0} failed.

WST0018.tokens.null=WST0018:Invalid Request Security Token Response applied to the service {0}. RSTR does not contain an issued token nor a proof token.

WST0019.invalid.proofToken.type=WST0019:Invalid Proof Token Type: {0} for the service {1}.

# {0} - text in base64 encoding (e.g. AGVsbG8=)
WST0020.error.decoding=WST0020:Error while decoding {0}.

WST0021.error.unmarshal.domElement=WST0021:Error while unmarshalling into JAXBElement from a dom Element.

WST0022.invalid.entropy=WST0022:Invalid entropy type: {0}. Allowed types are - Binary, EncryptedType and Custom.

WST0023.invalid.uri.syntax=WST0023:Invalid URI syntax: {0}.

WST0024.invalid.request.type=WST0024:Invalid Request Type: {0}. Must be one of Issue, Cancel, KeyExchange, Renew, or Validate.

WST0025.invalid.key.type=WST0025:Invalid Key Type: {0} applies to the service {1}. Must be one of Publickey, Symmetric Key or No Proof Key.

WST0026.invalid.ck.algorithm.E=WST0026:Invalid Computed Key Algorithm {0}.
WST0026.invalid.ck.algorithm=WST0026:Invalid Computed Key Algorithm {0}. Must be one of HASH or PSHA1.

WST0028.invalid.ck=WST0028:Invalid Computed Key URI {0}.

WST0029.could.not.get.sts.location=WST0029:STS location could not be obtained from either IssuedToken or from client configuration for accessing the service {0}.

WST0030.requestor.null=WST0030:Subject is null. Either the client is not authenticated, or subject not established while authentication.

# {0} - token type, {1} URL
WST0031.unsupported.token.type=WST0031:Unsupported Token Type: {0} applies to {1}. SAML 1.0 or SAML 1.1 assertion token types expected.

WST0032.error.creating.SAML.assertion=WST0032:Error in creating SAML Assertion.

WST0033.unable.get.service.cert=WST0033:Unable to get service certificate for the service {0}.

WST0034.unable.get.client.cert=WST0034:Unable to get client certificate. Either the subject does not contain valid credentials or there was a problem adding the X509 certificate.

WST0035.unable.create.sign.saml.assertion=WST0035:Unable to create sign SAML Assertion.

WST0036.unable.create.keyInfo=WST0036:Unable to create Key Info.

WST0037.error.computing.key=WST0037:Error while computing key.

WST0038.init.contract.fail=WST0038:Trust contract could not be established.

WST0039.error.creating.docfactory=WST0039:Error creating a document factory due to Parser exception.

WST0040.error.encrypt.proofkey=WST0040:Error encrypting proof key for the service {0}.

WST0041.service.not.created=WST0041:Could not create service due to malformed URL {0}.

WST0042.no.matching.service.mex=WST0042:No matching service with endpoint {0} found in the Metadata.

WST0043.unable.get.sts.key=WST0043:Unable to get the key for the STS.

WST0044.error.encrypt.issued.token=WST0044:Error encrypting issued token for the service {0}.

WST0045.error.unmarshall.claims=WST0045: Error unmarshalling Claims for the service {0}.

WST0046.token.expired=WST0046: Token expired: created {0}, expires{1}; current {2}

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
WST1001.token.type=WST1001:Token type: {0}.

WST1002.provider.type=WST1002:STS provider configuration type {0}.

WST1003.tokentype.appliesto.null=WST1003:TokenType and AppliesTo cannot be both null.

WST1004.error.marshal.toString=WST1004:Error in Marshalling {0} Element to string for logging.

WST1006.created.rst.issue=WST1006:Created RST for Issue:\n {0}.

WST1007.created.rstr.issue=WST1007:Created RSTR for Issue:\n {0}.

WST1008.created.rstr.cancel=WST1008:Created RSTR for Cancel:\n {0}.

WST1009.null.binary.secret=WST1009:Binary Secret is null. ClientEntropy in the RST does not contain a Binary Secret.

WST1010.key.size=WST1010:Keysize value: {0}. Default is {1}.

WST1011.problem.metadata=WST1011:Problem in extracting MetaData from Issued Token.STS URI is {0}.

WST1012.service.portname.mex=WST1012:Getting STS service and port names through MEX. ServiceName: {0} and PortName: {1}.

WST1013.sts.uri.client=WST1013:Getting STS location from client configuration. STS URI: {0}.

WST1014.response.invoking.rst=WST1014:RSTR Reponse on invoking RST:\n {0}.

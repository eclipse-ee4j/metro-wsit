#
# Copyright (c) 2010, 2022 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Distribution License v. 1.0, which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: BSD-3-Clause
#

#### Logging Error codes

WST0001.unsupported.proofToken.type=WST0001: tipo di token di prova {0} di destinazione per il servizio {1} non supportato. I tipi accettati sono chiave calcolata e segreto binario.

WST0002.fail.marshal.tosource=WST0002: si \u00E8 verificato un errore durante il marshalling di {0} sull''origine.

WST0003.error.creating.wstrustfact=WST0003: si \u00E8 verificato un errore durante la creazione di WSTrustElementFactory.

WST0004.unknown.serviceprovider=WST0004: provider di servizi di destinazione sconosciuto {0}. La configurazione STS non contiene metadati per il servizio.

WST0005.classnotfound.null.contract=WST0005: impossibile ottenere un contratto sicuro in quanto la classe {0} non \u00E8 stata trovata.

WST0006.fail.rst.source=WST0006: impossibile creare RST dall''origine {0}.

WST0007.fail.rst.elem=WST0007: impossibile creare RST dall''elemento {0}.

WST0008.fail.rstr.source=WST0008: impossibile creare RSTR dall''origine {0}.

WST0009.fail.rstr.elem=WST0009: impossibile creare RSTR dall''elemento {0}.

# {0} - "RST"/"RSTRCollection"/"STR" ("Request Security Token", "Security Token Reference")
WST0010.failed.creation.from.jaxbele=WST0010: si \u00E8 verificato un problema durante la creazione di {0} da JAXBElement.

WST0011.parserconfig.ex.toElement=WST0011: eccezione di configurazione del parser durante la creazione dell'elemento.

WST0012.jaxb.ex.toElement=WST0012: JAXBException rilevata durante la creazione dell'elemento.

WST0013.error.secret.key=WST0013: l''errore durante il calcolo della chiave segreta con l''algoritmo {0} di dimensione {1} riguarda il servizio {2}.

WST0014.uri.syntax=WST0014: URI non valido ottenuto dal contesto di RST.

# {0} - user name, {1} - token type, {2} - URL e.g.: WST0015:The client CN=a,L=b,ST=c,2.5.4.17=#13053238323039 is not authorized to be issued the token of type urn:oasis:names:tc:SAML:2.0:assertion applied to http://localhost:8080/myService.
WST0015.client.not.authorized=WST0015: il client {0} non \u00E8 autorizzato all''emissione del token di tipo {1} applicato a {2}.

WST0016.problem.itCtx=WST0016: si \u00E8 verificato un problema nel richiamo di STS {0} o nella gestione della risposta pervenuta quando \u00E8 stato richiesto il token per il servizio {1}.

# STS = Security Token Service.
WST0017.service.portname.error=WST0017: impossibile ottenere i metadati STS. Chiamata di MEX a STS {0} non riuscita.

WST0018.tokens.null=WST0018: risposta RSTR (Request Security Token Response) non valida applicata al servizio {0}. RSTR non contiene un token emesso n\u00E9 un token di prova.

WST0019.invalid.proofToken.type=WST0019: tipo di token di prova non valido, {0}, per il servizio {1}.

# {0} - text in base64 encoding (e.g. AGVsbG8=)
WST0020.error.decoding=WST0020: errore durante la decodifica di {0}.

WST0021.error.unmarshal.domElement=WST0021: errore durante l'unmarshalling in JAXBElement da un elemento dom.

WST0022.invalid.entropy=WST0022: tipo di entropia non valido: {0}. I tipi consentiti sono i seguenti: Binary, EncryptedType e Custom.

WST0023.invalid.uri.syntax=WST0023: sintassi URI non valida: {0}.

WST0024.invalid.request.type=WST0024: tipo di richiesta non valida: {0}. Deve essere uno dei seguenti tipi: Emetti, Annulla, KeyExchange, Rinnova o Convalida.

WST0025.invalid.key.type=WST0025: tipo di chiave non valida, {0}, applicata al servizio {1}. Deve essere chiave pubblica, chiave simmetrica o nessuna chiave di prova.

WST0026.invalid.ck.algorithm.E=WST0026: algoritmo della chiave calcolata {0} non valido.
WST0026.invalid.ck.algorithm=WST0026: algoritmo della chiave calcolata {0} non valida. Deve essere HASH o PSHA1.

WST0028.invalid.ck=WST0028: URI della chiave calcolata non valido {0}.

WST0029.could.not.get.sts.location=WST0029: impossibile ottenere la posizione del servizio STS da IssuedToken o dalla configurazione client per l''accesso al servizio {0}.

WST0030.requestor.null=WST0030: oggetto nullo. Il client non \u00E8 autenticato o l'oggetto non \u00E8 stato stabilito durante l'autenticazione.

# {0} - token type, {1} URL
WST0031.unsupported.token.type=WST0031: tipo di token non supportato {0} applicato a {1}. Previsti tipi di token di asserzione SAML 1.0 o SAML 1.1.

WST0032.error.creating.SAML.assertion=WST0032: errore nella creazione dell'asserzione SAML.

WST0033.unable.get.service.cert=WST0033: impossibile ottenere il certificato di servizio per il servizio {0}.

WST0034.unable.get.client.cert=WST0034: impossibile ottenere il certificato client. L'oggetto non contiene credenziali valide o si \u00E8 verificato un problema durante l'aggiunta del certificato X509.

WST0035.unable.create.sign.saml.assertion=WST0035: impossibile creare l'asserzione SAML di firma.

WST0036.unable.create.keyInfo=WST0036: impossibile creare le informazioni sulla chiave.

WST0037.error.computing.key=WST0037: errore durante il calcolo della chiave.

WST0038.init.contract.fail=WST0038: impossibile stabilire un contratto sicuro.

WST0039.error.creating.docfactory=WST0039: errore durante la creazione di un document factory a causa di un'eccezione del parser.

WST0040.error.encrypt.proofkey=WST0040: errore durante la cifratura della chiave di prova per il servizio {0}.

WST0041.service.not.created=WST0041: impossibile creare il servizio a causa del''URL con formato non valido {0}.

WST0042.no.matching.service.mex=WST0042: nessun servizio corrispondente con l''endpoint {0} trovato nei metadati.

WST0043.unable.get.sts.key=WST0043: impossibile ottenere la chiave per il servizio STS.

WST0044.error.encrypt.issued.token=WST0044: errore durante la cifratura del token emesso per il servizio {0}.

WST0045.error.unmarshall.claims=WST0045: errore durante l''unmarshalling delle richieste per il servizio {0}.

WST0046.token.expired=WST0046: token scaduto: creato {0}, scadenza {1}; corrente {2}

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
WST1001.token.type=WST1001: tipo di token: {0}.

WST1002.provider.type=WST1002: tipo di configurazione del provider STS {0}.

WST1003.tokentype.appliesto.null=WST1003: TokenType e AppliesTo non possono essere entrambi nulli.

WST1004.error.marshal.toString=WST1004: errore durante il marshalling dell''elemento {0} sulla stringa per il log.

WST1006.created.rst.issue=WST1006: RST creato per emissione:\n {0}.

WST1007.created.rstr.issue=WST1007: RSTR creato per emissione:\n {0}.

WST1008.created.rstr.cancel=WST1008: RST creato per annullamento:\n {0}.

WST1009.null.binary.secret=WST1009: segreto binario nullo. ClientEntropy in RST non contiene un segreto binario.

WST1010.key.size=WST1010: valore Keysize: {0}. Il valore predefinito \u00E8 {1}.

WST1011.problem.metadata=WST1011: problema nell''estrazione dei metadati dal token emesso. L''URI del servizio STS \u00E8 {0}.

WST1012.service.portname.mex=WST1012: recupero del servizio STS e dei nomi di porta tramite MEX. ServiceName: {0} e PortName: {1}.

WST1013.sts.uri.client=WST1013: recupero della posizione del servizio STS dalla configurazione client. URI STS: {0}.

WST1014.response.invoking.rst=WST1014: risposta RSTR al richiamo di RST:\n {0}.

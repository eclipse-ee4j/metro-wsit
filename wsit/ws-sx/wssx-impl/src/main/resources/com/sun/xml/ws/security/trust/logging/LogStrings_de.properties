#
# Copyright (c) 2010, 2022 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Distribution License v. 1.0, which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: BSD-3-Clause
#

#### Logging Error codes

WST0001.unsupported.proofToken.type=WST0001: Nicht unterst\u00FCtzter Pr\u00FCftokentyp: {0} als Ziel f\u00FCr den Service {1}. Akzeptierte Typen sind berechneter Schl\u00FCssel und bin\u00E4rer geheimer Schl\u00FCssel.

WST0002.fail.marshal.tosource=WST0002: Beim Marshalling von {0} in Quelle ist ein Fehler aufgetreten.

WST0003.error.creating.wstrustfact=WST0003: Bei der Erstellung von WSTrustElementFactory ist ein Fehler aufgetreten.

WST0004.unknown.serviceprovider=WST0004: Unbekannter Zielserviceprovider {0}. STS-Konfiguration enth\u00E4lt keine Metadaten f\u00FCr den Service.

WST0005.classnotfound.null.contract=WST0005: Trust-Vertrag konnte nicht abgerufen werden, weil die Klasse {0} nicht gefunden wurde.

WST0006.fail.rst.source=WST0006: RST konnte nicht aus Quelle {0} erstellt werden.

WST0007.fail.rst.elem=WST0007: RST konnte nicht aus Element {0} erstellt werden.

WST0008.fail.rstr.source=WST0008: RSTR konnte nicht aus Quelle {0} erstellt werden.

WST0009.fail.rstr.elem=WST0009: RSTR konnte nicht aus Element {0} erstellt werden.

# {0} - "RST"/"RSTRCollection"/"STR" ("Request Security Token", "Security Token Reference")
WST0010.failed.creation.from.jaxbele=WST0010: Bei der Erstellung von {0} aus JAXBElement ist ein Problem aufgetreten.

WST0011.parserconfig.ex.toElement=WST0011: Parserkonfigurationsausnahme bei der Erstellung des Elements.

WST0012.jaxb.ex.toElement=WST0012: JAXBException bei der Erstellung des Elements aufgetreten.

WST0013.error.secret.key=WST0013: Fehler bei der Berechnung des geheimen Schl\u00FCssels mit Algorithmus {0} mit Gr\u00F6\u00DFe {1}, gilt f\u00FCr den Service {2}.

WST0014.uri.syntax=WST0014: Ung\u00FCltiger URI aus RST-Kontext abgerufen.

# {0} - user name, {1} - token type, {2} - URL e.g.: WST0015:The client CN=a,L=b,ST=c,2.5.4.17=#13053238323039 is not authorized to be issued the token of type urn:oasis:names:tc:SAML:2.0:assertion applied to http://localhost:8080/myService.
WST0015.client.not.authorized=WST0015: Der Client {0} ist nicht f\u00FCr die Ausstellung des Tokens vom Typ {1} f\u00FCr {2} autorisiert.

WST0016.problem.itCtx=WST0016: Beim Aufruf von STS {0} oder bei der Bearbeitung der Antwort von STS ist bei der Anforderung des Tokens f\u00FCr den Service {1} ein Problem aufgetreten.

# STS = Security Token Service.
WST0017.service.portname.error=WST0017: STS-Metadaten konnten nicht abgerufen werden. MEX-Aufruf von STS {0} nicht erfolgreich.

WST0018.tokens.null=WST0018: Ung\u00FCltige Antwort auf angefordertes Sicherheitstoken, das f\u00FCr Service {0} angewendet wird. RSTR enth\u00E4lt weder ein ausgestelltes Token noch ein Pr\u00FCftoken.

WST0019.invalid.proofToken.type=WST0019: Ung\u00FCltiger Pr\u00FCftokentyp: {0} f\u00FCr den Service {1}.

# {0} - text in base64 encoding (e.g. AGVsbG8=)
WST0020.error.decoding=WST0020: Fehler beim Decodieren von {0}.

WST0021.error.unmarshal.domElement=WST0021: Fehler beim Unmarshalling in JAXBElement aus einem DOM-Element.

WST0022.invalid.entropy=WST0022: Ung\u00FCltiger Entropietyp: {0}. Zul\u00E4ssige Typen sind - Binary, EncryptedType und Custom.

WST0023.invalid.uri.syntax=WST0023: Ung\u00FCltige URI-Syntax: {0}.

WST0024.invalid.request.type=WST0024: Ung\u00FCltiger Anforderungstyp: {0}. Zul\u00E4ssige Typen sind: Issue, Cancel, KeyExchange, Renew oder Validate.

WST0025.invalid.key.type=WST0025: Ung\u00FCltiger Schl\u00FCsseltyp: {0} gilt f\u00FCr Service {1}. Folgende Typen sind zul\u00E4ssig: Public Key, Symmetrischer Schl\u00FCssel oder Kein Pr\u00FCfschl\u00FCssel.

WST0026.invalid.ck.algorithm.E=WST0026: Ung\u00FCltiger Algorithmus {0} f\u00FCr berechneten Schl\u00FCssel.
WST0026.invalid.ck.algorithm=WST0026: Ung\u00FCltiger Algorithmus {0} f\u00FCr berechneten Schl\u00FCssel. Muss HASH oder PSHA1 sein.

WST0028.invalid.ck=WST0028: Ung\u00FCltiger URI {0} f\u00FCr berechneten Schl\u00FCssel.

WST0029.could.not.get.sts.location=WST0029: STS-Verzeichnis konnte nicht aus IssuedToken oder aus Clientkonfiguration f\u00FCr Zugriff auf den Service {0} abgerufen werden.

WST0030.requestor.null=WST0030: Subject ist null. Entweder ist der Client nicht authentifiziert oder das Subject wurde bei der Authentifizierung nicht erstellt.

# {0} - token type, {1} URL
WST0031.unsupported.token.type=WST0031: Nicht unterst\u00FCtzter Tokentyp: {0} wird f\u00FCr {1} angewendet. SAML 1.0- oder SAML 1.1-Assertionstokentypen erwartet.

WST0032.error.creating.SAML.assertion=WST0032: Fehler bei der Erstellung der SAML-Assertion.

WST0033.unable.get.service.cert=WST0033: Servicezertifikat f\u00FCr den Service {0} konnte nicht abgerufen werden.

WST0034.unable.get.client.cert=WST0034: Clientzertifikat kann nicht abgerufen werden. Entweder enth\u00E4lt das Subject keine g\u00FCltigen Zugangsdaten oder bei der Hinzuf\u00FCgung des X509-Zertifikats ist ein Problem aufgetreten.

WST0035.unable.create.sign.saml.assertion=WST0035: SAML-Assertion kann nicht erstellt werden.

WST0036.unable.create.keyInfo=WST0036: Schl\u00FCsselinformationen k\u00F6nnen nicht erstellt werden.

WST0037.error.computing.key=WST0037: Fehler bei der Berechnung des Schl\u00FCssels.

WST0038.init.contract.fail=WST0038: Trust-Vertrag konnte nicht erstellt werden.

WST0039.error.creating.docfactory=WST0039: Fehler bei der Erstellung einer Dokument-Factory wegen Parserausnahme.

WST0040.error.encrypt.proofkey=WST0040: Fehler bei der Verschl\u00FCsselung von Pr\u00FCfschl\u00FCssel f\u00FCr den Service {0}.

WST0041.service.not.created=WST0041: Service konnte wegen falschem URL-Format {0} nicht erstellt werden.

WST0042.no.matching.service.mex=WST0042: Kein \u00FCbereinstimmender Service mit End Point {0} wurde in den Metadaten gefunden.

WST0043.unable.get.sts.key=WST0043: Schl\u00FCssel f\u00FCr STS kann nicht abgerufen werden.

WST0044.error.encrypt.issued.token=WST0044: Fehler bei der Verschl\u00FCsselung von ausgestelltem Token f\u00FCr den Service {0}.

WST0045.error.unmarshall.claims=WST0045: Fehler beim Unmarshalling von Claims f\u00FCr den Service {0}.

WST0046.token.expired=WST0046: Token abgelaufen: erstellt {0}, l\u00E4uft ab {1}; aktuell {2}

#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
WST1001.token.type=WST1001:Tokentyp: {0}.

WST1002.provider.type=WST1002:STS- Providerkonfigurationstyp {0}.

WST1003.tokentype.appliesto.null=WST1003: TokenType und AppliesTo d\u00FCrfen nicht null sein.

WST1004.error.marshal.toString=WST1004: Fehler beim Marshalling von {0}-Element in Zeichenfolge f\u00FCr Logging.

WST1006.created.rst.issue=WST1006: RST f\u00FCr "Issue" erstellt:\n {0}.

WST1007.created.rstr.issue=WST1007: RSTR f\u00FCr "Issue" erstellt:\n {0}.

WST1008.created.rstr.cancel=WST1008: RSTR f\u00FCr "Cancel" erstellt:\n {0}.

WST1009.null.binary.secret=WST1009: Bin\u00E4rer geheimer Schl\u00FCssel ist null. ClientEntropy in RST enth\u00E4lt keinen bin\u00E4ren geheimen Schl\u00FCssel.

WST1010.key.size=WST1010: KeySize-Wert: {0}. Standardwert ist {1}.

WST1011.problem.metadata=WST1011: Problem beim Extrahieren von MetaData aus ausgestelltem Token.STS-URI ist {0}.

WST1012.service.portname.mex=WST1012: STS-Service und Portnamen werden \u00FCber MEX extrahiert. ServiceName: {0} und PortName: {1}.

WST1013.sts.uri.client=WST1013: STS-Verzeichnis wird aus Clientkonfiguration abgerufen. STS-URI: {0}.

WST1014.response.invoking.rst=WST1014:RSTR-Antwort beim Aufrufen von RST:\n {0}.
